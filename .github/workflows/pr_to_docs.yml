name: "pr_to_docs"

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  # specify value of the variables in repository's secret,
  # detail is https://docs.github.com/en/actions/security-guides/using-secrets-in-github-actions
  DBT_PROFILES_DIR: ./
  POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
  POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
  DBT_USER: ${{ secrets.DBT_USER }}
  DBT_PASSWORD: ${{ secrets.DBT_PASSWORD }}

jobs:
  docs_generate:
    name: docs_generate
    runs-on: ubuntu-latest

    steps:
      - name: Step 01 - Checkout current branch
        id: step-01
        uses: actions/checkout@v3
    
      - name: Step 02 - Install python & dbt dependencies
        run: |
          pip install -r requirements.txt
          dbt deps

      - name: Step 03 - Verify dbt
        id: step-03
        run: dbt --version

      - name: Step 04 - Compile dbt
        id: step-04
        run: |
          dbt deps
          dbt compile
        
      - name: Step 05 - Generate dbt docs
        id: step-05
        run: |
          dbt deps
          dbt docs generate
          cd target
          mkdir ${{ github.workspace }}/docs
          cp *.json *.html graph.gpickle ${{ github.workspace }}/docs
          ls -ltra ${{ github.workspace }}/docs
      
      - name: "Step 06 - Upload pages to artifact"
        id: step-06
        uses: actions/upload-pages-artifact@v2
        with:
          path: ${{ github.workspace }}/docs
      
      - name: "Step 07 - Zip artifact"
        id: step-07
        run: zip -jrq docs.zip ${{ github.workspace }}/docs
      
      - name: "Step 08 - Upload artifact for deployment job"
        id: step-08
        uses: actions/upload-artifact@v3
        with:
          name: docs
          path: docs.zip

  # Deploy to Github pages
  deploy-to-github-pages:
    # Add a dependency to the build job
    needs: docs_generate
    
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source
    
    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2 # or the latest "vX.X.X" version tag for this action